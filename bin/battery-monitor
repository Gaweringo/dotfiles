#!/bin/bash

# Designed to be run by systemd timer every 30 seconds and alerts if battery is low

BATTERY_THRESHOLD=15
BATTERY_THRESHOLD_CRITICAL=5
NOTIFICATION_FLAG="/run/user/$UID/battery_notified"
NOTIFICATION_FLAG_CRITICAL="/run/user/$UID/battery_notified_critical"

get_battery_percentage() {
  upower -i $(upower -e | grep 'BAT') | grep -E "percentage" | grep -o '[0-9]\+%' | sed 's/%//'
}

get_battery_state() {
  upower -i $(upower -e | grep 'BAT') | grep -E "state" | awk '{print $2}'
}

send_notification() {
  setsid swaynag -m "Battery Low: Time to recharge! (battery is at ${1}%)" -t warning
  setsid notify-send -u critical "Battery Low" "Time to recharge! (battery is at ${1}%)" -i battery-caution
}

send_notification_critical() {
  setsid swaynag -m "Battery Critical: It's really time to recharge! (battery is at ${1}%)" -t error
  setsid notify-send -u critical "Battery Low" "Time to recharge! (battery is at ${1}%)" -i battery-caution
}

BATTERY_LEVEL=$(get_battery_percentage)
BATTERY_STATE=$(get_battery_state)

if [[ "$BATTERY_STATE" == "discharging" && "$BATTERY_LEVEL" -le "$BATTERY_THRESHOLD" ]]; then
  if [[ ! -f "$NOTIFICATION_FLAG" ]]; then
    send_notification "$BATTERY_LEVEL"
    touch "$NOTIFICATION_FLAG"
  fi
else
  rm -f "$NOTIFICATION_FLAG"
fi

if [[ "$BATTERY_STATE" == "discharging" && "$BATTERY_LEVEL" -le "$BATTERY_THRESHOLD_CRITICAL" ]]; then
  if [[ ! -f "$NOTIFICATION_FLAG_CRITICAL" ]]; then
    send_notification_critical "$BATTERY_LEVEL"
    touch "$NOTIFICATION_FLAG_CRITICAL"
  fi
else
  rm -f "$NOTIFICATION_FLAG_CRITICAL"
fi
