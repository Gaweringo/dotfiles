{{#if (eq dotter.os "windows")}}
[credential "helperselector"]
	selected = manager
{{/if}}
{{#if (is_executable  "gh")}}
[credential "https://github.com"]
	helper = 
	helper = !gh auth git-credential
{{#if git_username}}
	username = {{git_username}}
{{/if}}
[credential "https://gist.github.com"]
	helper = 
	helper = !gh auth git-credential
{{#if git_username}}
	username = {{git_username}}
{{/if}}
{{/if}}
{{#if (and email git_username)}}
[user]
    email = {{email}}
    name = {{git_username}}
{{/if}}
[init]
	defaultBranch = main
[alias]
	# Better git logs from Slipp D. Thompson: https://stackoverflow.com/a/34467298
	l = lg1 -n 25
	ll = lg2 -n 20
	lll = lg3 -n 15
	lg = lg1
	lg1 = lg1-specific --all
	lg2 = lg2-specific --all
	lg3 = lg3-specific --all
	lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
	lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

	logd = log -p --ext-diff
	showd = show --ext-diff

	fixup = !sha=$( git -c color.ui=always log --oneline -n 100 | fzf +s --ansi --no-multi --prompt 'Fixup> ' --preview 'git show --color=always {1}' ) && git commit --fixup "${sha%% *}"
	rebasi = !sha=$( git -c color.ui=always log --oneline -n 100 | fzf +s --ansi --no-multi --prompt 'Rebase -i --autosquash > ' --preview 'git show --color=always {1}' ) && git rebase -i --autosquash "${sha%% *}"

	s = status
	d = diff
	sw = !git switch $(git branch | fzf --height=20% --reverse --info=inline)
	in = log --oneline '@..@{u}'
	out = log --oneline '@{u}..@'
	fin = !git fetch && git in
	fout = !git fetch && git out
	cm = commit -m
	a = add .
	aa = add -A
[pull]
	rebase = false
	ff = only
[push]
	autoSetupRemote = true
[fetch]
	prune = false
[merge]
	conflictStyle = diff3
[rebase]
	autoStash = false
	autoSquash = true
	updateRefs = true
[rerere]
	enabled = true
[core]
	{{#if (eq dotter.os "windows")}}
	symlinks = true
	autocrlf = true
	{{else}}
	autocrlf = input
	{{/if}}
	{{#if (is_executable "nvim")}}
	editor = nvim
	longpaths = true
	{{/if}}
	{{#if (and (eq dotter.os "unix") (is_executable "less"))}}
	pager = less -F -X
	{{/if}}

{{#if (is_executable "difft")}}
# Difftastic setup
[diff]
	external = difft
{{/if}}

{{#if (is_executable "delta")}}
# delta for all diff operations and blame
[core]
	pager = delta

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true
	hyperlinks = true
	side-by-side = true
	line-number = true
	commit-decoration-style = none
	file-decoration-style = none
	hunk-header-decoration-style = none

	line-numbers-left-format = {nm:^4}
	line-numbers-right-format = {nm:^4}

[diff]
	colorMoved = default
{{/if}}

# vim:ft=gitconfig
